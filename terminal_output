script version: 5747b2fe173a3b7f1db8f30c07f06671866acdc6
in Breathe
[polluter] tests/test_merger.py::test_core_commands
[victim]: tests/test_loading.py::test_loading_failure
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_command_context.py .                                          [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/b75966bda7c83143dc3384e42ecf2461.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 1 failed, 2 passed in 0.69s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_command_context.py F                                          [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
__________________________ test_manual_context_noccr ___________________________

    def test_manual_context_noccr():
        Breathe.add_commands(
            CommandContext("test") | AppContext("italy"),
            {"spaghetti": DoNothing()},
            ccr=False
        )
        # Loaded rule should be referencing the original
        # "test" context loaded above, which should already be
        # active
>       engine.mimic(["spaghetti"])

tests/test_command_context.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['spaghetti'], kwargs = {}
words_rules = (('spaghetti', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7ff20c5e2070>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7ff20c6cef10>, <dragonfly.engines.backe...marWrapper object at 0x7ff20c64fd60>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7ff20c5e2070>])
exclusive_count = 0, processing_occurred = None

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['spaghetti'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/de8958720faf0cf5fdb5454adc08387f.csv -
=========================== short test summary info ============================
FAILED tests/test_command_context.py::test_manual_context_noccr - dragonfly.e...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 2 failed, 1 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_command_context.py .                                          [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/06a05a77807a5a85c0cc76985e179ca5.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 1 failed, 2 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_command_context.py .                                          [ 66%]
tests/test_loading.py .                                                  [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/fb7777075193a9e63971a9b5835070a8.csv -
============================== 3 passed in 0.57s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_elements.py .                                                 [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/c120a4c842fad1cbc6f7770c4fabcab0.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 1 failed, 2 passed in 0.77s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 50%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/6cf17bc38dce92cfb5834ff19cb31130.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 1 failed, 1 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_loading.py FF                                                 [100%]

=================================== FAILURES ===================================
_________________________________ test_loading _________________________________

    def test_loading():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        engine.mimic("rebuild everything test")
>       engine.mimic("apple")

tests/test_loading.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['apple'], kwargs = {}
words_rules = (('apple', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fc207dc7af0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fc207e46e80>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fc207dc7af0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['apple'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
WARNING  breathe_master:master.py:211 Nothing found to reload. For modules to be reloadable they must be loaded using 'Breathe.load_modules()'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/39f1b0d4d340493585e3a9f72c51fd04.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading - dragonfly.engines.base.engine.Mi...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 2 failed, 1 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_loading.py FF                                                 [100%]

=================================== FAILURES ===================================
________________________________ test_reloading ________________________________

    def test_reloading():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(
        None,
        {
            "parsnip": DoNothing(),
        }
    )
    """
            )
        # I have no idea why this is necessary, it's a total hack
        if PY2:
            os.remove(file_path + "c")
        engine.mimic("rebuild everything test")
        with pytest.raises(MimicFailure):
            engine.mimic("apple")
>       engine.mimic("parsnip")

tests/test_loading.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['parsnip'], kwargs = {}
words_rules = (('parsnip', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fd684d14ac0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fd684d93e50>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fd684d14ac0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['parsnip'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
WARNING  breathe_master:master.py:211 Nothing found to reload. For modules to be reloadable they must be loaded using 'Breathe.load_modules()'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/91860aea896fb695a7a4e9e9918373a2.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_reloading - dragonfly.engines.base.engine....
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 2 failed, 1 passed in 0.73s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_loading.py ..                                                 [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/3d84a88ca85261488ca5d44fa02c0c43.csv -
============================== 3 passed in 0.59s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py ..                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/3fc6df8a88a6a9b924224fed04b96160.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 1 failed, 2 passed in 0.77s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 50%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/8b4c875ce8160449f76405cca971e041.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 1 failed, 1 passed in 0.92s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py ..                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/ec5e097a6ca7da0ab05bcee72b65e0fe.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 1 failed, 2 passed in 0.80s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .F                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_noccr_commands ______________________________

    def test_noccr_commands():
        Breathe.add_commands(
            AppContext("firefox"),
            {"dictation <text>": DoNothing(), "testing static": DoNothing()},
            ccr=False,
        )
        engine.mimic(["testing", "static"], executable="firefox")
        with pytest.raises(MimicFailure):
            engine.mimic(["dictation", "TESTING"])
            engine.mimic(["testing", "static", "testing", "static"], executable="firefox")
>       engine.mimic(["dictation", "TESTING"], executable="firefox")

tests/test_merger.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['dictation', 'TESTING']
kwargs = {'executable': 'firefox'}
words_rules = (('dictation', 0), ('testing', 1000000)), w = FakeWindow()
process_args = {'executable': 'firefox', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbcd1f24280>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbcd200ef40>, <dragonfly.engines.backe...marWrapper object at 0x7fbcd1f8fac0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbcd1f24280>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['dictation', 'TESTING'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
ERROR    compound.parse:elements_compound.py:162 Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
ERROR    breathe_master:helpers.py:62 Exception raised while processing 'dictation <text>', command will be skipped.
ERROR    breathe_master:helpers.py:63 Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 61, in reference
    return self.extras[ref]
KeyError: Token(WORD, 'text')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 68, in _call_userfunc
    return f(children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 63, in reference
    raise Exception("Unknown reference name %r" % (str(ref)))
Exception: Unknown reference name 'text'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 160, in __init__
    element = CompoundTransformer(self._extras).transform(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 105, in transform
    return self._transform_tree(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 101, in _transform_tree
    children = list(self._transform_children(tree.children))
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 92, in _transform_children
    yield self._transform_tree(c)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 102, in _transform_tree
    return self._call_userfunc(tree, children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 72, in _call_userfunc
    raise VisitError(tree.data, tree, e)
lark.exceptions.VisitError: Error trying to process rule "reference":

Unknown reference name 'text'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 59, in construct_commands
    c = BoundCompound(spec, extras=extras, value=value)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 163, in __init__
    raise ParseError("Exception raised transforming %r: %s" % (spec, e))
dragonfly.parsing.parse.ParseError: Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/3dadefdbbd292d2bf6ebb6dd900dac38.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_noccr_commands - dragonfly.engines.base.eng...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 2 failed, 1 passed in 0.75s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .F                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_grammar_numbers _____________________________

    def test_grammar_numbers():
        engine.mimic(["test", "three"])
        # Ensure that we are not adding more grammars than necessary
>       assert len(engine.grammars) == 4
E       assert 2 == 4
E        +  where 2 = len([Master(Merger), SubGrammar(SG2)])
E        +    where [Master(Merger), SubGrammar(SG2)] = TextInputEngine().grammars

tests/test_merger.py:69: AssertionError
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/0997ab281eccc768da9a36fbec8b9dea.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_grammar_numbers - assert 2 == 4
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 2 failed, 1 passed in 0.73s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py ..                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/1c82380cfccc3b6931f974acf8de9811.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 1 failed, 2 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .F                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_________________________________ test_invalid _________________________________

    def test_invalid():
        Breathe.add_commands(
            AppContext("code.exe"),
            {
                "test that <nonexistent_extra>": DoNothing(),
                1: DoNothing(),
            },
        )
>       assert len(Breathe.contexts) == 1
E       assert 0 == 1
E        +  where 0 = len([])
E        +    where [] = Master(Merger).contexts

tests/test_merger.py:84: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    compound.parse:elements_compound.py:162 Exception raised transforming 'test that <nonexistent_extra>': Error trying to process rule "reference":

Unknown reference name 'nonexistent_extra'
ERROR    breathe_master:helpers.py:62 Exception raised while processing 'test that <nonexistent_extra>', command will be skipped.
ERROR    breathe_master:helpers.py:63 Exception raised transforming 'test that <nonexistent_extra>': Error trying to process rule "reference":

Unknown reference name 'nonexistent_extra'
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 61, in reference
    return self.extras[ref]
KeyError: Token(WORD, 'nonexistent_extra')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 68, in _call_userfunc
    return f(children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 63, in reference
    raise Exception("Unknown reference name %r" % (str(ref)))
Exception: Unknown reference name 'nonexistent_extra'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 160, in __init__
    element = CompoundTransformer(self._extras).transform(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 105, in transform
    return self._transform_tree(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 101, in _transform_tree
    children = list(self._transform_children(tree.children))
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 92, in _transform_children
    yield self._transform_tree(c)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 102, in _transform_tree
    return self._call_userfunc(tree, children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 72, in _call_userfunc
    raise VisitError(tree.data, tree, e)
lark.exceptions.VisitError: Error trying to process rule "reference":

Unknown reference name 'nonexistent_extra'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 59, in construct_commands
    c = BoundCompound(spec, extras=extras, value=value)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 163, in __init__
    raise ParseError("Exception raised transforming %r: %s" % (spec, e))
dragonfly.parsing.parse.ParseError: Exception raised transforming 'test that <nonexistent_extra>': Error trying to process rule "reference":

Unknown reference name 'nonexistent_extra'
ERROR    breathe_master:helpers.py:62 Exception raised while processing '1', command will be skipped.
ERROR    breathe_master:helpers.py:63 
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 58, in construct_commands
    assert isinstance(spec, string_types)
AssertionError
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/fd67820cac9f946179428c0a9993f85d.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_invalid - assert 0 == 1
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 2 failed, 1 passed in 0.88s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py ..                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 5 == 0
E        +  where 5 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]'), BoundCompound('test weight')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]'), BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/8ed27a46cb77f73bcb97e6777e971396.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 5...
========================= 1 failed, 2 passed in 0.76s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py ..                                                  [ 66%]
tests/test_loading.py .                                                  [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/9987a7087d9fc9e3022c889235b31d00.csv -
============================== 3 passed in 0.63s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 6 == 0
E        +  where 6 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]'), BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]'), BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/7782f624f0b5602c84966ea6410f7ede.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 6...
========================= 1 failed, 2 passed in 0.85s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/fa6cace797c32a6d33906b4e6fc580e7.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 1 failed, 2 passed in 0.83s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/c144167cc9e17dfb69b470cd2f8ea95a.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 1 failed, 2 passed in 0.74s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py F                                                [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_______________________________ test_recognition _______________________________

    def test_recognition():
>       engine.mimic("lemon", executable="notepad")

tests/test_top_level.py:56: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['lemon'], kwargs = {'executable': 'notepad'}
words_rules = (('lemon', 0),), w = FakeWindow()
process_args = {'executable': 'notepad', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f7f57f8c8b0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f7f58083d90>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f7f57f8c8b0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['lemon'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/2a278b71f5a27145f5c3a635155440fc.csv -
=========================== short test summary info ============================
FAILED tests/test_top_level.py::test_recognition - dragonfly.engines.base.eng...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 2 failed, 1 passed in 0.83s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py F                                                [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
________________________ test_top_level_command_failure ________________________

    def test_top_level_command_failure():
        Breathe.add_commands(
            AppContext("china"),
            {
                "not marked top level <sequence1> and <sequence2> [<n>]": DoNothing()
                + Exec("sequence1")
                + DoNothing()
                + Exec("sequence2")* Repeat("n")
            },
            extras=[CommandsRef("sequence1"), CommandsRef("sequence2", 2), IntegerRef("n", 1, 10, 1)],
            top_level=False,
        )
>       assert len(Breathe.top_level_commands) == 2
E       assert 0 == 2
E        +  where 0 = len([])
E        +    where [] = Master(Merger).top_level_commands

tests/test_top_level.py:85: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:34 Attempting to use 'CommandsRef(..., name='sequence1')' in commands which are notmarked as top level. Separate these commands from normal commandsand add them using 'Breathe.add_commands(..., top_level=True)'.
ERROR    breathe_master:helpers.py:34 Attempting to use 'CommandsRef(..., name='sequence2')' in commands which are notmarked as top level. Separate these commands from normal commandsand add them using 'Breathe.add_commands(..., top_level=True)'.
ERROR    compound.parse:elements_compound.py:162 Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
ERROR    breathe_master:helpers.py:62 Exception raised while processing 'not marked top level <sequence1> and <sequence2> [<n>]', command will be skipped.
ERROR    breathe_master:helpers.py:63 Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 61, in reference
    return self.extras[ref]
KeyError: Token(WORD, 'sequence1')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 68, in _call_userfunc
    return f(children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 63, in reference
    raise Exception("Unknown reference name %r" % (str(ref)))
Exception: Unknown reference name 'sequence1'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 160, in __init__
    element = CompoundTransformer(self._extras).transform(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 105, in transform
    return self._transform_tree(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 101, in _transform_tree
    children = list(self._transform_children(tree.children))
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 92, in _transform_children
    yield self._transform_tree(c)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 102, in _transform_tree
    return self._call_userfunc(tree, children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 72, in _call_userfunc
    raise VisitError(tree.data, tree, e)
lark.exceptions.VisitError: Error trying to process rule "reference":

Unknown reference name 'sequence1'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 59, in construct_commands
    c = BoundCompound(spec, extras=extras, value=value)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 163, in __init__
    raise ParseError("Exception raised transforming %r: %s" % (spec, e))
dragonfly.parsing.parse.ParseError: Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 4 == 0
E        +  where 4 = len([BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/bd7ea665a1e2fd99807bc30b32fa8f51.csv -
=========================== short test summary info ============================
FAILED tests/test_top_level.py::test_top_level_command_failure - assert 0 == 2
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 4...
========================= 2 failed, 1 passed in 0.88s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_loading.py .                                                  [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b97a01603887f3f1db181536d4689a38/ae310fd18c8be156da77c86e2dc6a4ea.csv -
============================== 3 passed in 0.63s ===============================
in Breathe
[polluter] tests/test_merger.py::test_kaldi_weight_passthrough
[victim]: tests/test_loading.py::test_loading_failure
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_command_context.py .                                          [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/b75966bda7c83143dc3384e42ecf2461.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 1 failed, 2 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_command_context.py F                                          [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
__________________________ test_manual_context_noccr ___________________________

    def test_manual_context_noccr():
        Breathe.add_commands(
            CommandContext("test") | AppContext("italy"),
            {"spaghetti": DoNothing()},
            ccr=False
        )
        # Loaded rule should be referencing the original
        # "test" context loaded above, which should already be
        # active
>       engine.mimic(["spaghetti"])

tests/test_command_context.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['spaghetti'], kwargs = {}
words_rules = (('spaghetti', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f5e6daf6430>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f5e6db59e50>, <dragonfly.engines.backe...marWrapper object at 0x7f5e6daedc40>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f5e6daf6430>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['spaghetti'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/de8958720faf0cf5fdb5454adc08387f.csv -
=========================== short test summary info ============================
FAILED tests/test_command_context.py::test_manual_context_noccr - dragonfly.e...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 2 failed, 1 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_command_context.py .                                          [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/06a05a77807a5a85c0cc76985e179ca5.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 1 failed, 2 passed in 0.68s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_command_context.py .                                          [ 66%]
tests/test_loading.py .                                                  [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/fb7777075193a9e63971a9b5835070a8.csv -
============================== 3 passed in 0.62s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_elements.py .                                                 [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/c120a4c842fad1cbc6f7770c4fabcab0.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 1 failed, 2 passed in 0.75s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 50%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/6cf17bc38dce92cfb5834ff19cb31130.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 1 failed, 1 passed in 0.69s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_loading.py FF                                                 [100%]

=================================== FAILURES ===================================
_________________________________ test_loading _________________________________

    def test_loading():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        engine.mimic("rebuild everything test")
>       engine.mimic("apple")

tests/test_loading.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['apple'], kwargs = {}
words_rules = (('apple', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0c68c72040>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0c68cd7e80>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0c68c72040>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['apple'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
WARNING  breathe_master:master.py:211 Nothing found to reload. For modules to be reloadable they must be loaded using 'Breathe.load_modules()'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/39f1b0d4d340493585e3a9f72c51fd04.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading - dragonfly.engines.base.engine.Mi...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 2 failed, 1 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_loading.py FF                                                 [100%]

=================================== FAILURES ===================================
________________________________ test_reloading ________________________________

    def test_reloading():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(
        None,
        {
            "parsnip": DoNothing(),
        }
    )
    """
            )
        # I have no idea why this is necessary, it's a total hack
        if PY2:
            os.remove(file_path + "c")
        engine.mimic("rebuild everything test")
        with pytest.raises(MimicFailure):
            engine.mimic("apple")
>       engine.mimic("parsnip")

tests/test_loading.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['parsnip'], kwargs = {}
words_rules = (('parsnip', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fd7d4459fd0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fd7d4459df0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fd7d4459fd0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['parsnip'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
WARNING  breathe_master:master.py:211 Nothing found to reload. For modules to be reloadable they must be loaded using 'Breathe.load_modules()'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/91860aea896fb695a7a4e9e9918373a2.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_reloading - dragonfly.engines.base.engine....
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 2 failed, 1 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_loading.py ..                                                 [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/3d84a88ca85261488ca5d44fa02c0c43.csv -
============================== 3 passed in 0.52s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py ..                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/3fc6df8a88a6a9b924224fed04b96160.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 1 failed, 2 passed in 0.68s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py ..                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 5 == 0
E        +  where 5 = len([BoundCompound('test weight'), BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('test weight'), BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/8b4c875ce8160449f76405cca971e041.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 5...
========================= 1 failed, 2 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .F                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
____________________________ test_context_commands _____________________________

    def test_context_commands():
        Breathe.add_commands(
            AppContext("notepad"),
            {"test [<num>]": lambda num: DoNothing().execute()},
            [Choice("num", {"four": "4", "five": "5", "six": "6"})],
            {"num": ""},
        )
        with pytest.raises(MimicFailure):
            engine.mimic(["test", "three", "test", "four"])
>       engine.mimic(["test", "three", "test", "four"], executable="notepad")

tests/test_merger.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['test', 'three', 'test', 'four']
kwargs = {'executable': 'notepad'}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('four', 0))
w = FakeWindow()
process_args = {'executable': 'notepad', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f48873af1c0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f48873fcee0>, <dragonfly.engines.backe...marWrapper object at 0x7f4887397640>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f48873af1c0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'four'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/ec5e097a6ca7da0ab05bcee72b65e0fe.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_context_commands - dragonfly.engines.base.e...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 2 failed, 1 passed in 0.66s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .F                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_noccr_commands ______________________________

    def test_noccr_commands():
        Breathe.add_commands(
            AppContext("firefox"),
            {"dictation <text>": DoNothing(), "testing static": DoNothing()},
            ccr=False,
        )
        engine.mimic(["testing", "static"], executable="firefox")
        with pytest.raises(MimicFailure):
            engine.mimic(["dictation", "TESTING"])
            engine.mimic(["testing", "static", "testing", "static"], executable="firefox")
>       engine.mimic(["dictation", "TESTING"], executable="firefox")

tests/test_merger.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['dictation', 'TESTING']
kwargs = {'executable': 'firefox'}
words_rules = (('dictation', 0), ('testing', 1000000)), w = FakeWindow()
process_args = {'executable': 'firefox', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f6fe65d6a60>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f6fe663bfd0>, <dragonfly.engines.backe...marWrapper object at 0x7f6fe65ced90>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f6fe65d6a60>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['dictation', 'TESTING'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
ERROR    compound.parse:elements_compound.py:162 Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
ERROR    breathe_master:helpers.py:62 Exception raised while processing 'dictation <text>', command will be skipped.
ERROR    breathe_master:helpers.py:63 Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 61, in reference
    return self.extras[ref]
KeyError: Token(WORD, 'text')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 68, in _call_userfunc
    return f(children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 63, in reference
    raise Exception("Unknown reference name %r" % (str(ref)))
Exception: Unknown reference name 'text'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 160, in __init__
    element = CompoundTransformer(self._extras).transform(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 105, in transform
    return self._transform_tree(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 101, in _transform_tree
    children = list(self._transform_children(tree.children))
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 92, in _transform_children
    yield self._transform_tree(c)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 102, in _transform_tree
    return self._call_userfunc(tree, children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 72, in _call_userfunc
    raise VisitError(tree.data, tree, e)
lark.exceptions.VisitError: Error trying to process rule "reference":

Unknown reference name 'text'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 59, in construct_commands
    c = BoundCompound(spec, extras=extras, value=value)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 163, in __init__
    raise ParseError("Exception raised transforming %r: %s" % (spec, e))
dragonfly.parsing.parse.ParseError: Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/3dadefdbbd292d2bf6ebb6dd900dac38.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_noccr_commands - dragonfly.engines.base.eng...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 2 failed, 1 passed in 0.66s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .F                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_grammar_numbers _____________________________

    def test_grammar_numbers():
>       engine.mimic(["test", "three"])

tests/test_merger.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['test', 'three'], kwargs = {}
words_rules = (('test', 0), ('three', 0)), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0336a7fd60>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f03345dfe50>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0336a7fd60>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/0997ab281eccc768da9a36fbec8b9dea.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_grammar_numbers - dragonfly.engines.base.en...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 2 failed, 1 passed in 0.76s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py ..                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/1c82380cfccc3b6931f974acf8de9811.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 1 failed, 2 passed in 0.85s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .F                                                  [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_________________________________ test_invalid _________________________________

    def test_invalid():
        Breathe.add_commands(
            AppContext("code.exe"),
            {
                "test that <nonexistent_extra>": DoNothing(),
                1: DoNothing(),
            },
        )
>       assert len(Breathe.contexts) == 1
E       assert 0 == 1
E        +  where 0 = len([])
E        +    where [] = Master(Merger).contexts

tests/test_merger.py:84: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    compound.parse:elements_compound.py:162 Exception raised transforming 'test that <nonexistent_extra>': Error trying to process rule "reference":

Unknown reference name 'nonexistent_extra'
ERROR    breathe_master:helpers.py:62 Exception raised while processing 'test that <nonexistent_extra>', command will be skipped.
ERROR    breathe_master:helpers.py:63 Exception raised transforming 'test that <nonexistent_extra>': Error trying to process rule "reference":

Unknown reference name 'nonexistent_extra'
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 61, in reference
    return self.extras[ref]
KeyError: Token(WORD, 'nonexistent_extra')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 68, in _call_userfunc
    return f(children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 63, in reference
    raise Exception("Unknown reference name %r" % (str(ref)))
Exception: Unknown reference name 'nonexistent_extra'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 160, in __init__
    element = CompoundTransformer(self._extras).transform(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 105, in transform
    return self._transform_tree(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 101, in _transform_tree
    children = list(self._transform_children(tree.children))
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 92, in _transform_children
    yield self._transform_tree(c)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 102, in _transform_tree
    return self._call_userfunc(tree, children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 72, in _call_userfunc
    raise VisitError(tree.data, tree, e)
lark.exceptions.VisitError: Error trying to process rule "reference":

Unknown reference name 'nonexistent_extra'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 59, in construct_commands
    c = BoundCompound(spec, extras=extras, value=value)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 163, in __init__
    raise ParseError("Exception raised transforming %r: %s" % (spec, e))
dragonfly.parsing.parse.ParseError: Exception raised transforming 'test that <nonexistent_extra>': Error trying to process rule "reference":

Unknown reference name 'nonexistent_extra'
ERROR    breathe_master:helpers.py:62 Exception raised while processing '1', command will be skipped.
ERROR    breathe_master:helpers.py:63 
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 58, in construct_commands
    assert isinstance(spec, string_types)
AssertionError
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/fd67820cac9f946179428c0a9993f85d.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_invalid - assert 0 == 1
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 2 failed, 1 passed in 0.80s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 50%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/8ed27a46cb77f73bcb97e6777e971396.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 1 failed, 1 passed in 0.66s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py ..                                                  [ 66%]
tests/test_loading.py .                                                  [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/9987a7087d9fc9e3022c889235b31d00.csv -
============================== 3 passed in 0.53s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 3 == 0
E        +  where 3 = len([BoundCompound('test weight'), BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('test weight'), BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/7782f624f0b5602c84966ea6410f7ede.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 3...
========================= 1 failed, 2 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/fa6cace797c32a6d33906b4e6fc580e7.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 1 failed, 2 passed in 0.67s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/c144167cc9e17dfb69b470cd2f8ea95a.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 1 failed, 2 passed in 0.66s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py F                                                [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_______________________________ test_recognition _______________________________

    def test_recognition():
>       engine.mimic("lemon", executable="notepad")

tests/test_top_level.py:56: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['lemon'], kwargs = {'executable': 'notepad'}
words_rules = (('lemon', 0),), w = FakeWindow()
process_args = {'executable': 'notepad', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f63a9af82e0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f63a9b42eb0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f63a9af82e0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['lemon'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/2a278b71f5a27145f5c3a635155440fc.csv -
=========================== short test summary info ============================
FAILED tests/test_top_level.py::test_recognition - dragonfly.engines.base.eng...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 2 failed, 1 passed in 0.67s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py F                                                [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
________________________ test_top_level_command_failure ________________________

    def test_top_level_command_failure():
        Breathe.add_commands(
            AppContext("china"),
            {
                "not marked top level <sequence1> and <sequence2> [<n>]": DoNothing()
                + Exec("sequence1")
                + DoNothing()
                + Exec("sequence2")* Repeat("n")
            },
            extras=[CommandsRef("sequence1"), CommandsRef("sequence2", 2), IntegerRef("n", 1, 10, 1)],
            top_level=False,
        )
>       assert len(Breathe.top_level_commands) == 2
E       assert 0 == 2
E        +  where 0 = len([])
E        +    where [] = Master(Merger).top_level_commands

tests/test_top_level.py:85: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:34 Attempting to use 'CommandsRef(..., name='sequence1')' in commands which are notmarked as top level. Separate these commands from normal commandsand add them using 'Breathe.add_commands(..., top_level=True)'.
ERROR    breathe_master:helpers.py:34 Attempting to use 'CommandsRef(..., name='sequence2')' in commands which are notmarked as top level. Separate these commands from normal commandsand add them using 'Breathe.add_commands(..., top_level=True)'.
ERROR    compound.parse:elements_compound.py:162 Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
ERROR    breathe_master:helpers.py:62 Exception raised while processing 'not marked top level <sequence1> and <sequence2> [<n>]', command will be skipped.
ERROR    breathe_master:helpers.py:63 Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 61, in reference
    return self.extras[ref]
KeyError: Token(WORD, 'sequence1')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 68, in _call_userfunc
    return f(children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 63, in reference
    raise Exception("Unknown reference name %r" % (str(ref)))
Exception: Unknown reference name 'sequence1'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 160, in __init__
    element = CompoundTransformer(self._extras).transform(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 105, in transform
    return self._transform_tree(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 101, in _transform_tree
    children = list(self._transform_children(tree.children))
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 92, in _transform_children
    yield self._transform_tree(c)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 102, in _transform_tree
    return self._call_userfunc(tree, children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 72, in _call_userfunc
    raise VisitError(tree.data, tree, e)
lark.exceptions.VisitError: Error trying to process rule "reference":

Unknown reference name 'sequence1'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 59, in construct_commands
    c = BoundCompound(spec, extras=extras, value=value)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 163, in __init__
    raise ParseError("Exception raised transforming %r: %s" % (spec, e))
dragonfly.parsing.parse.ParseError: Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = len([BoundCompound('test weight')])
E        +    where [BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/bd7ea665a1e2fd99807bc30b32fa8f51.csv -
=========================== short test summary info ============================
FAILED tests/test_top_level.py::test_top_level_command_failure - assert 0 == 2
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 1...
========================= 2 failed, 1 passed in 0.74s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_merger.py .                                                   [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_loading.py .                                                  [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/f57e4f24ce02661c7047004509d9d83d/ae310fd18c8be156da77c86e2dc6a4ea.csv -
============================== 3 passed in 0.54s ===============================
in Breathe
[polluter] tests/test_top_level.py::test_top_level_command
[victim]: tests/test_loading.py::test_loading_failure
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_command_context.py .                                          [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/b75966bda7c83143dc3384e42ecf2461.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 1 failed, 2 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_command_context.py F                                          [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
__________________________ test_manual_context_noccr ___________________________

    def test_manual_context_noccr():
        Breathe.add_commands(
            CommandContext("test") | AppContext("italy"),
            {"spaghetti": DoNothing()},
            ccr=False
        )
        # Loaded rule should be referencing the original
        # "test" context loaded above, which should already be
        # active
>       engine.mimic(["spaghetti"])

tests/test_command_context.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['spaghetti'], kwargs = {}
words_rules = (('spaghetti', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fe398326820>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fe39841ad30>, <dragonfly.engines.backe...marWrapper object at 0x7fe39839b910>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fe398326820>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['spaghetti'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/de8958720faf0cf5fdb5454adc08387f.csv -
=========================== short test summary info ============================
FAILED tests/test_command_context.py::test_manual_context_noccr - dragonfly.e...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 2 failed, 1 passed in 0.73s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_command_context.py .                                          [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/06a05a77807a5a85c0cc76985e179ca5.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 1 failed, 2 passed in 0.69s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_command_context.py .                                          [ 66%]
tests/test_loading.py .                                                  [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/fb7777075193a9e63971a9b5835070a8.csv -
============================== 3 passed in 0.56s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_elements.py .                                                 [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/c120a4c842fad1cbc6f7770c4fabcab0.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 1 failed, 2 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 50%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/6cf17bc38dce92cfb5834ff19cb31130.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 1 failed, 1 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_loading.py FF                                                 [100%]

=================================== FAILURES ===================================
_________________________________ test_loading _________________________________

    def test_loading():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        engine.mimic("rebuild everything test")
>       engine.mimic("apple")

tests/test_loading.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['apple'], kwargs = {}
words_rules = (('apple', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f8281376280>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f828146ec40>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f8281376280>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['apple'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
WARNING  breathe_master:master.py:211 Nothing found to reload. For modules to be reloadable they must be loaded using 'Breathe.load_modules()'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/39f1b0d4d340493585e3a9f72c51fd04.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading - dragonfly.engines.base.engine.Mi...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 2 failed, 1 passed in 0.73s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_loading.py FF                                                 [100%]

=================================== FAILURES ===================================
________________________________ test_reloading ________________________________

    def test_reloading():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(
        None,
        {
            "parsnip": DoNothing(),
        }
    )
    """
            )
        # I have no idea why this is necessary, it's a total hack
        if PY2:
            os.remove(file_path + "c")
        engine.mimic("rebuild everything test")
        with pytest.raises(MimicFailure):
            engine.mimic("apple")
>       engine.mimic("parsnip")

tests/test_loading.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['parsnip'], kwargs = {}
words_rules = (('parsnip', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f5b263383a0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f5b2642dd60>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f5b263383a0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['parsnip'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
WARNING  breathe_master:master.py:211 Nothing found to reload. For modules to be reloadable they must be loaded using 'Breathe.load_modules()'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/91860aea896fb695a7a4e9e9918373a2.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_reloading - dragonfly.engines.base.engine....
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 2 failed, 1 passed in 0.70s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_loading.py ..                                                 [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/3d84a88ca85261488ca5d44fa02c0c43.csv -
============================== 3 passed in 0.55s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_merger.py .                                                   [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/3fc6df8a88a6a9b924224fed04b96160.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 1 failed, 2 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_merger.py .                                                   [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 6 == 0
E        +  where 6 = len([BoundCompound('orange'), BoundCompound('grapefruit'), BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit'), BoundCompound('test one'), BoundCompound('test two'), BoundCompound('test three'), BoundCompound('banana [<n>]')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/8b4c875ce8160449f76405cca971e041.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 6...
========================= 1 failed, 2 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_merger.py F                                                   [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
____________________________ test_context_commands _____________________________

    def test_context_commands():
        Breathe.add_commands(
            AppContext("notepad"),
            {"test [<num>]": lambda num: DoNothing().execute()},
            [Choice("num", {"four": "4", "five": "5", "six": "6"})],
            {"num": ""},
        )
        with pytest.raises(MimicFailure):
            engine.mimic(["test", "three", "test", "four"])
>       engine.mimic(["test", "three", "test", "four"], executable="notepad")

tests/test_merger.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['test', 'three', 'test', 'four']
kwargs = {'executable': 'notepad'}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('four', 0))
w = FakeWindow()
process_args = {'executable': 'notepad', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f1c2e3a8a00>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f1c2e48ed90>, <dragonfly.engines.backe...marWrapper object at 0x7f1c2e3a2850>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f1c2e3a8a00>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'four'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/ec5e097a6ca7da0ab05bcee72b65e0fe.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_context_commands - dragonfly.engines.base.e...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 2 failed, 1 passed in 0.73s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_merger.py F                                                   [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_noccr_commands ______________________________

    def test_noccr_commands():
        Breathe.add_commands(
            AppContext("firefox"),
            {"dictation <text>": DoNothing(), "testing static": DoNothing()},
            ccr=False,
        )
        engine.mimic(["testing", "static"], executable="firefox")
        with pytest.raises(MimicFailure):
            engine.mimic(["dictation", "TESTING"])
            engine.mimic(["testing", "static", "testing", "static"], executable="firefox")
>       engine.mimic(["dictation", "TESTING"], executable="firefox")

tests/test_merger.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['dictation', 'TESTING']
kwargs = {'executable': 'firefox'}
words_rules = (('dictation', 0), ('testing', 1000000)), w = FakeWindow()
process_args = {'executable': 'firefox', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fd2feb41a00>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fd2fec15c10>, <dragonfly.engines.backe...marWrapper object at 0x7fd2feb20940>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fd2feb41a00>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['dictation', 'TESTING'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
ERROR    compound.parse:elements_compound.py:162 Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
ERROR    breathe_master:helpers.py:62 Exception raised while processing 'dictation <text>', command will be skipped.
ERROR    breathe_master:helpers.py:63 Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 61, in reference
    return self.extras[ref]
KeyError: Token(WORD, 'text')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 68, in _call_userfunc
    return f(children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 63, in reference
    raise Exception("Unknown reference name %r" % (str(ref)))
Exception: Unknown reference name 'text'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 160, in __init__
    element = CompoundTransformer(self._extras).transform(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 105, in transform
    return self._transform_tree(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 101, in _transform_tree
    children = list(self._transform_children(tree.children))
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 92, in _transform_children
    yield self._transform_tree(c)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 102, in _transform_tree
    return self._call_userfunc(tree, children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 72, in _call_userfunc
    raise VisitError(tree.data, tree, e)
lark.exceptions.VisitError: Error trying to process rule "reference":

Unknown reference name 'text'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 59, in construct_commands
    c = BoundCompound(spec, extras=extras, value=value)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 163, in __init__
    raise ParseError("Exception raised transforming %r: %s" % (spec, e))
dragonfly.parsing.parse.ParseError: Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/3dadefdbbd292d2bf6ebb6dd900dac38.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_noccr_commands - dragonfly.engines.base.eng...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 2 failed, 1 passed in 0.76s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_merger.py F                                                   [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_grammar_numbers _____________________________

    def test_grammar_numbers():
>       engine.mimic(["test", "three"])

tests/test_merger.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['test', 'three'], kwargs = {}
words_rules = (('test', 0), ('three', 0)), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7ff1717822b0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7ff171871c70>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7ff1717822b0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/0997ab281eccc768da9a36fbec8b9dea.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_grammar_numbers - dragonfly.engines.base.en...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 2 failed, 1 passed in 0.80s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_merger.py .                                                   [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/1c82380cfccc3b6931f974acf8de9811.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 1 failed, 2 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_merger.py .                                                   [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/fd67820cac9f946179428c0a9993f85d.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 1 failed, 2 passed in 0.69s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_merger.py .                                                   [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 3 == 0
E        +  where 3 = len([BoundCompound('orange'), BoundCompound('grapefruit'), BoundCompound('test weight')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit'), BoundCompound('test weight')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/8ed27a46cb77f73bcb97e6777e971396.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 3...
========================= 1 failed, 2 passed in 0.70s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 33%]
tests/test_merger.py .                                                   [ 66%]
tests/test_loading.py .                                                  [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/9987a7087d9fc9e3022c889235b31d00.csv -
============================== 3 passed in 0.56s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .                                                [ 50%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/7782f624f0b5602c84966ea6410f7ede.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 1 failed, 1 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py ..                                               [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/fa6cace797c32a6d33906b4e6fc580e7.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 1 failed, 2 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py ..                                               [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/c144167cc9e17dfb69b470cd2f8ea95a.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 1 failed, 2 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .F                                               [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
_______________________________ test_recognition _______________________________

    def test_recognition():
        engine.mimic("lemon", executable="notepad")
        engine.mimic("fruit from lemon banana orange and five", executable="notepad")
    
>       engine.mimic(
            "fruit from pear banana orange and grapefruit",
            executable="notepad",
            title="chrome",
        )

tests/test_top_level.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['fruit', 'from', 'pear', 'banana', 'orange', 'and', ...]
kwargs = {'executable': 'notepad', 'title': 'chrome'}
words_rules = (('fruit', 0), ('from', 0), ('pear', 0), ('banana', 0), ('orange', 0), ('and', 0), ...)
w = FakeWindow()
process_args = {'executable': 'notepad', 'handle': 0, 'title': 'chrome'}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f70f9350790>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f70f9448ca0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f70f9350790>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['fruit', 'from', 'pear', 'banana', 'orange', 'and', 'grapefruit'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/2a278b71f5a27145f5c3a635155440fc.csv -
=========================== short test summary info ============================
FAILED tests/test_top_level.py::test_recognition - dragonfly.engines.base.eng...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 2 failed, 1 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py .F                                               [ 66%]
tests/test_loading.py F                                                  [100%]

=================================== FAILURES ===================================
________________________ test_top_level_command_failure ________________________

    def test_top_level_command_failure():
        Breathe.add_commands(
            AppContext("china"),
            {
                "not marked top level <sequence1> and <sequence2> [<n>]": DoNothing()
                + Exec("sequence1")
                + DoNothing()
                + Exec("sequence2")* Repeat("n")
            },
            extras=[CommandsRef("sequence1"), CommandsRef("sequence2", 2), IntegerRef("n", 1, 10, 1)],
            top_level=False,
        )
>       assert len(Breathe.top_level_commands) == 2
E       AssertionError: assert 1 == 2
E        +  where 1 = len([[BoundCompound('fruit from <sequence1> and [<sequence2>] [<n>]')]])
E        +    where [[BoundCompound('fruit from <sequence1> and [<sequence2>] [<n>]')]] = Master(Merger).top_level_commands

tests/test_top_level.py:85: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:34 Attempting to use 'CommandsRef(..., name='sequence1')' in commands which are notmarked as top level. Separate these commands from normal commandsand add them using 'Breathe.add_commands(..., top_level=True)'.
ERROR    breathe_master:helpers.py:34 Attempting to use 'CommandsRef(..., name='sequence2')' in commands which are notmarked as top level. Separate these commands from normal commandsand add them using 'Breathe.add_commands(..., top_level=True)'.
ERROR    compound.parse:elements_compound.py:162 Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
ERROR    breathe_master:helpers.py:62 Exception raised while processing 'not marked top level <sequence1> and <sequence2> [<n>]', command will be skipped.
ERROR    breathe_master:helpers.py:63 Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 61, in reference
    return self.extras[ref]
KeyError: Token(WORD, 'sequence1')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 68, in _call_userfunc
    return f(children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 63, in reference
    raise Exception("Unknown reference name %r" % (str(ref)))
Exception: Unknown reference name 'sequence1'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 160, in __init__
    element = CompoundTransformer(self._extras).transform(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 105, in transform
    return self._transform_tree(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 101, in _transform_tree
    children = list(self._transform_children(tree.children))
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 92, in _transform_children
    yield self._transform_tree(c)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 102, in _transform_tree
    return self._call_userfunc(tree, children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 72, in _call_userfunc
    raise VisitError(tree.data, tree, e)
lark.exceptions.VisitError: Error trying to process rule "reference":

Unknown reference name 'sequence1'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 59, in construct_commands
    c = BoundCompound(spec, extras=extras, value=value)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 163, in __init__
    raise ParseError("Exception raised transforming %r: %s" % (spec, e))
dragonfly.parsing.parse.ParseError: Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
_____________________________ test_loading_failure _____________________________

    def test_loading_failure():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(,,,
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        modules = {
            "tests": {
                "my_grammar": ["fruit"],
            }
        }
        Breathe.load_modules(modules)
        assert len(Breathe.modules) == 1
>       assert len(Breathe.core_commands) == 0
E       AssertionError: assert 2 == 0
E        +  where 2 = len([BoundCompound('orange'), BoundCompound('grapefruit')])
E        +    where [BoundCompound('orange'), BoundCompound('grapefruit')] = Master(Merger).core_commands

tests/test_loading.py:32: AssertionError
----------------------------- Captured stdout call -----------------------------
Loading module tests.my_grammar.fruit
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:131 Import of 'tests.my_grammar.fruit' failed with
ERROR    breathe_master:helpers.py:132 invalid syntax (fruit.py, line 5)
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 123, in load_or_reload
    importlib.import_module(module_name)
  File "/usr/local/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/tests/my_grammar/fruit.py", line 5
    Breathe.add_commands(,,,
                         ^
SyntaxError: invalid syntax
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/bd7ea665a1e2fd99807bc30b32fa8f51.csv -
=========================== short test summary info ============================
FAILED tests/test_top_level.py::test_top_level_command_failure - AssertionErr...
FAILED tests/test_loading.py::test_loading_failure - AssertionError: assert 2...
========================= 2 failed, 1 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_top_level.py ..                                               [ 66%]
tests/test_loading.py .                                                  [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/259daa71232a77df9863ba16c03bafb6/ae310fd18c8be156da77c86e2dc6a4ea.csv -
============================== 3 passed in 0.57s ===============================
in Breathe
[polluter] tests/test_command_context.py::test_manual_context
[victim]: tests/test_merger.py::test_core_commands
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 50%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f21ef2168b0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f21ecd78ca0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f21ef2168b0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/b75966bda7c83143dc3384e42ecf2461.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 1 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py ..                                         [ 66%]
tests/test_merger.py .                                                   [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/de8958720faf0cf5fdb5454adc08387f.csv -
============================== 3 passed in 0.56s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py ..                                         [ 66%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f095b686e80>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f095b6e0be0>, <dragonfly.engines.backe...marWrapper object at 0x7f095db7ea90>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f095b686e80>])
exclusive_count = 0, processing_occurred = None

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/06a05a77807a5a85c0cc76985e179ca5.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 2 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py ..                                         [ 66%]
tests/test_merger.py .                                                   [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/fb7777075193a9e63971a9b5835070a8.csv -
============================== 3 passed in 0.58s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_elements.py .                                                 [ 66%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbdbafda2e0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbdbb03ed00>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbdbafda2e0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/c120a4c842fad1cbc6f7770c4fabcab0.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 2 passed in 0.81s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_loading.py .                                                  [ 66%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f5ede5df3d0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f5ede62cbe0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f5ede5df3d0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/6cf17bc38dce92cfb5834ff19cb31130.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 2 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_loading.py F                                                  [ 66%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
_________________________________ test_loading _________________________________

    def test_loading():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(
        None,
        {
            "apple": DoNothing(),
        }
    )
    """
            )
        engine.mimic("rebuild everything test")
>       engine.mimic("apple")

tests/test_loading.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['apple'], kwargs = {}
words_rules = (('apple', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f30a35ab490>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f30a35f9c70>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f30a35ab490>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['apple'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
WARNING  breathe_master:master.py:211 Nothing found to reload. For modules to be reloadable they must be loaded using 'Breathe.load_modules()'
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f30a35ab490>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f30a35f9c70>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f30a35ab490>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/39f1b0d4d340493585e3a9f72c51fd04.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_loading - dragonfly.engines.base.engine.Mi...
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 2 failed, 1 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_loading.py F                                                  [ 66%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
________________________________ test_reloading ________________________________

    def test_reloading():
        with open(file_path, "w") as f:
            f.write("""
    from breathe import Breathe
    from ..testutils import DoNothing
    
    Breathe.add_commands(
        None,
        {
            "parsnip": DoNothing(),
        }
    )
    """
            )
        # I have no idea why this is necessary, it's a total hack
        if PY2:
            os.remove(file_path + "c")
        engine.mimic("rebuild everything test")
        with pytest.raises(MimicFailure):
            engine.mimic("apple")
>       engine.mimic("parsnip")

tests/test_loading.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['parsnip'], kwargs = {}
words_rules = (('parsnip', 0),), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2b328db4f0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2b32928cd0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2b328db4f0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['parsnip'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
WARNING  breathe_master:master.py:211 Nothing found to reload. For modules to be reloadable they must be loaded using 'Breathe.load_modules()'
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2b328db4f0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2b32928cd0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2b328db4f0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/91860aea896fb695a7a4e9e9918373a2.csv -
=========================== short test summary info ============================
FAILED tests/test_loading.py::test_reloading - dragonfly.engines.base.engine....
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 2 failed, 1 passed in 0.74s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_loading.py .                                                  [ 66%]
tests/test_merger.py .                                                   [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/3d84a88ca85261488ca5d44fa02c0c43.csv -
============================== 3 passed in 0.58s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_merger.py .F                                                  [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f64efd60700>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f64ed8c1c10>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f64efd60700>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/3fc6df8a88a6a9b924224fed04b96160.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 2 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 50%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fc7ebcc5ac0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fc7e9827c10>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fc7ebcc5ac0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/8b4c875ce8160449f76405cca971e041.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 1 passed in 0.71s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_merger.py FF                                                  [100%]

=================================== FAILURES ===================================
____________________________ test_context_commands _____________________________

    def test_context_commands():
        Breathe.add_commands(
            AppContext("notepad"),
            {"test [<num>]": lambda num: DoNothing().execute()},
            [Choice("num", {"four": "4", "five": "5", "six": "6"})],
            {"num": ""},
        )
        with pytest.raises(MimicFailure):
            engine.mimic(["test", "three", "test", "four"])
>       engine.mimic(["test", "three", "test", "four"], executable="notepad")

tests/test_merger.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['test', 'three', 'test', 'four']
kwargs = {'executable': 'notepad'}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('four', 0))
w = FakeWindow()
process_args = {'executable': 'notepad', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbc6ac1d0d0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbc6ac64b50>, <dragonfly.engines.backe...marWrapper object at 0x7fbc6d102100>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbc6ac1d0d0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'four'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbc6ac1d0d0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbc6ac64b50>, <dragonfly.engines.backe...marWrapper object at 0x7fbc6d102100>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7fbc6ac1d0d0>])
exclusive_count = 0, processing_occurred = None

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/ec5e097a6ca7da0ab05bcee72b65e0fe.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_context_commands - dragonfly.engines.base.e...
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 2 failed, 1 passed in 0.73s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_merger.py FF                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_noccr_commands ______________________________

    def test_noccr_commands():
        Breathe.add_commands(
            AppContext("firefox"),
            {"dictation <text>": DoNothing(), "testing static": DoNothing()},
            ccr=False,
        )
        engine.mimic(["testing", "static"], executable="firefox")
        with pytest.raises(MimicFailure):
            engine.mimic(["dictation", "TESTING"])
            engine.mimic(["testing", "static", "testing", "static"], executable="firefox")
>       engine.mimic(["dictation", "TESTING"], executable="firefox")

tests/test_merger.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['dictation', 'TESTING']
kwargs = {'executable': 'firefox'}
words_rules = (('dictation', 0), ('testing', 1000000)), w = FakeWindow()
process_args = {'executable': 'firefox', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f015e81f670>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f015e879c40>, <dragonfly.engines.backe...marWrapper object at 0x7f0160d196a0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f015e81f670>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['dictation', 'TESTING'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
------------------------------ Captured log call -------------------------------
ERROR    compound.parse:elements_compound.py:162 Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
ERROR    breathe_master:helpers.py:62 Exception raised while processing 'dictation <text>', command will be skipped.
ERROR    breathe_master:helpers.py:63 Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 61, in reference
    return self.extras[ref]
KeyError: Token(WORD, 'text')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 68, in _call_userfunc
    return f(children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 63, in reference
    raise Exception("Unknown reference name %r" % (str(ref)))
Exception: Unknown reference name 'text'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 160, in __init__
    element = CompoundTransformer(self._extras).transform(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 105, in transform
    return self._transform_tree(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 101, in _transform_tree
    children = list(self._transform_children(tree.children))
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 92, in _transform_children
    yield self._transform_tree(c)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 102, in _transform_tree
    return self._call_userfunc(tree, children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 72, in _call_userfunc
    raise VisitError(tree.data, tree, e)
lark.exceptions.VisitError: Error trying to process rule "reference":

Unknown reference name 'text'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 59, in construct_commands
    c = BoundCompound(spec, extras=extras, value=value)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 163, in __init__
    raise ParseError("Exception raised transforming %r: %s" % (spec, e))
dragonfly.parsing.parse.ParseError: Exception raised transforming 'dictation <text>': Error trying to process rule "reference":

Unknown reference name 'text'
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f015e81f670>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f015e879c40>, <dragonfly.engines.backe...marWrapper object at 0x7f0160d196a0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f015e81f670>])
exclusive_count = 0, processing_occurred = None

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/3dadefdbbd292d2bf6ebb6dd900dac38.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_noccr_commands - dragonfly.engines.base.eng...
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 2 failed, 1 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_merger.py FF                                                  [100%]

=================================== FAILURES ===================================
_____________________________ test_grammar_numbers _____________________________

    def test_grammar_numbers():
>       engine.mimic(["test", "three"])

tests/test_merger.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['test', 'three'], kwargs = {}
words_rules = (('test', 0), ('three', 0)), w = FakeWindow()
process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2bd2a5c670>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2bd05beb50>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2bd2a5c670>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2bd2a5c670>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2bd05beb50>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f2bd2a5c670>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/0997ab281eccc768da9a36fbec8b9dea.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_grammar_numbers - dragonfly.engines.base.en...
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 2 failed, 1 passed in 0.73s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_merger.py .F                                                  [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f12945fa5e0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f1292174b50>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f12945fa5e0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/1c82380cfccc3b6931f974acf8de9811.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 2 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_merger.py .F                                                  [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f02c3ccd700>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f02c182fc70>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f02c3ccd700>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/fd67820cac9f946179428c0a9993f85d.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 2 passed in 0.70s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_merger.py .F                                                  [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f1ce2f8a430>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f1ce2feecd0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f1ce2f8a430>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/8ed27a46cb77f73bcb97e6777e971396.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 2 passed in 0.70s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_merger.py ..                                                  [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/9987a7087d9fc9e3022c889235b31d00.csv -
============================== 3 passed in 0.57s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f00841f29a0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0084255c10>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f00841f29a0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/7782f624f0b5602c84966ea6410f7ede.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 2 passed in 0.70s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f39ab7299d0>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f39ab78dcd0>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f39ab7299d0>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/fa6cace797c32a6d33906b4e6fc580e7.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 2 passed in 0.79s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f96648e5340>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f9664931b20>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f96648e5340>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/c144167cc9e17dfb69b470cd2f8ea95a.csv -
=========================== short test summary info ============================
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 1 failed, 2 passed in 0.70s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_top_level.py F                                                [ 66%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
_______________________________ test_recognition _______________________________

    def test_recognition():
>       engine.mimic("lemon", executable="notepad")

tests/test_top_level.py:56: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine(), words = ['lemon'], kwargs = {'executable': 'notepad'}
words_rules = (('lemon', 0),), w = FakeWindow()
process_args = {'executable': 'notepad', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0d8b7ed910>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0d8b84ed00>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0d8b7ed910>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['lemon'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0d8b7ed910>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0d8b84ed00>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f0d8b7ed910>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/2a278b71f5a27145f5c3a635155440fc.csv -
=========================== short test summary info ============================
FAILED tests/test_top_level.py::test_recognition - dragonfly.engines.base.eng...
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 2 failed, 1 passed in 0.72s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_top_level.py F                                                [ 66%]
tests/test_merger.py F                                                   [100%]

=================================== FAILURES ===================================
________________________ test_top_level_command_failure ________________________

    def test_top_level_command_failure():
        Breathe.add_commands(
            AppContext("china"),
            {
                "not marked top level <sequence1> and <sequence2> [<n>]": DoNothing()
                + Exec("sequence1")
                + DoNothing()
                + Exec("sequence2")* Repeat("n")
            },
            extras=[CommandsRef("sequence1"), CommandsRef("sequence2", 2), IntegerRef("n", 1, 10, 1)],
            top_level=False,
        )
>       assert len(Breathe.top_level_commands) == 2
E       assert 0 == 2
E        +  where 0 = len([])
E        +    where [] = Master(Merger).top_level_commands

tests/test_top_level.py:85: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    breathe_master:helpers.py:34 Attempting to use 'CommandsRef(..., name='sequence1')' in commands which are notmarked as top level. Separate these commands from normal commandsand add them using 'Breathe.add_commands(..., top_level=True)'.
ERROR    breathe_master:helpers.py:34 Attempting to use 'CommandsRef(..., name='sequence2')' in commands which are notmarked as top level. Separate these commands from normal commandsand add them using 'Breathe.add_commands(..., top_level=True)'.
ERROR    compound.parse:elements_compound.py:162 Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
ERROR    breathe_master:helpers.py:62 Exception raised while processing 'not marked top level <sequence1> and <sequence2> [<n>]', command will be skipped.
ERROR    breathe_master:helpers.py:63 Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 61, in reference
    return self.extras[ref]
KeyError: Token(WORD, 'sequence1')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 68, in _call_userfunc
    return f(children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/parsing/parse.py", line 63, in reference
    raise Exception("Unknown reference name %r" % (str(ref)))
Exception: Unknown reference name 'sequence1'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 160, in __init__
    element = CompoundTransformer(self._extras).transform(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 105, in transform
    return self._transform_tree(tree)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 101, in _transform_tree
    children = list(self._transform_children(tree.children))
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 92, in _transform_children
    yield self._transform_tree(c)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 102, in _transform_tree
    return self._call_userfunc(tree, children)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/lark/visitors.py", line 72, in _call_userfunc
    raise VisitError(tree.data, tree, e)
lark.exceptions.VisitError: Error trying to process rule "reference":

Unknown reference name 'sequence1'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/breathe/grammar/helpers.py", line 59, in construct_commands
    c = BoundCompound(spec, extras=extras, value=value)
  File "/home/tsm/iFixFlakies_python/Repo/Breathe/venv/lib/python3.8/site-packages/dragonfly/grammar/elements_compound.py", line 163, in __init__
    raise ParseError("Exception raised transforming %r: %s" % (spec, e))
dragonfly.parsing.parse.ParseError: Exception raised transforming 'not marked top level <sequence1> and <sequence2> [<n>]': Error trying to process rule "reference":

Unknown reference name 'sequence1'
______________________________ test_core_commands ______________________________

    def test_core_commands():
        Breathe.add_commands(
            None,
            {
                "test one": DoNothing(),
                "test two": DoNothing(),
                "test three": DoNothing(),
                "banana [<n>]": DoNothing() * Repeat("n"),
            },
            [IntegerRef("n", 1, 10, 1)],
        )
>       engine.mimic(["test", "three", "test", "two", "banana", "five"])

tests/test_merger.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = TextInputEngine()
words = ['test', 'three', 'test', 'two', 'banana', 'five'], kwargs = {}
words_rules = (('test', 0), ('three', 0), ('test', 0), ('two', 0), ('banana', 0), ('five', 0))
w = FakeWindow(), process_args = {'executable': '', 'handle': 0, 'title': ''}
wrapper = <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f27f81f3910>
grammar_wrappers = dict_values([<dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f27f8257c40>, <dragonfly.engines.backend_text.engine.GrammarWrapper object at 0x7f27f81f3910>])
exclusive_count = 0, processing_occurred = False

    def mimic(self, words, **kwargs):
        """
        Mimic a recognition of the given *words*.
    
        :param words: words to mimic
        :type words: str|iter
        :Keyword Arguments:
    
           optional *executable*, *title* and/or *handle* keyword arguments
           may be used to simulate a specific foreground window context. The
           current foreground window attributes will be used instead for any
           keyword arguments not present.
    
        .. note::
    
           Any dictation words should be all uppercase, e.g. "HELLO WORLD".
           Dictation words not in uppercase will result in the engine
           **not** decoding and recognizing the command!
        """
        # Handle string input.
        if isinstance(words, string_types):
            words = words.split()
    
        # Don't allow non-iterable objects.
        if not iter(words):
            raise TypeError("%r is not a string or other iterable object"
                            % words)
    
        # Fail on empty input.
        if not words:
            raise MimicFailure("Invalid mimic input %r" % words)
    
        # Notify observers that a recognition has begun.
        self._recognition_observer_manager.notify_begin()
    
        # Generate the input for process_words.
        words_rules = self.generate_words_rules(words)
    
        w = Window.get_foreground()
        process_args = {
            "executable": w.executable,
            "title": w.title,
            "handle": w.handle,
        }
        # Allows optional passing of window attributes to mimic
        process_args.update(kwargs)
    
        # Call process_begin() for each grammar wrapper. Use a copy of
        # _grammar_wrappers in case it changes.
        for wrapper in self._grammar_wrappers.copy().values():
            wrapper.process_begin(**process_args)
    
        # Take another copy of _grammar_wrappers to use for processing.
        grammar_wrappers = self._grammar_wrappers.copy().values()
    
        # Count exclusive grammars.
        exclusive_count = 0
        for wrapper in grammar_wrappers:
            if wrapper.exclusive:
                exclusive_count += 1
    
        # Call process_words() for each grammar wrapper, stopping early if
        # processing occurred.
        processing_occurred = False
        for wrapper in grammar_wrappers:
            # Skip non-exclusive grammars if there are one or more exclusive
            # grammars.
            if exclusive_count > 0 and not wrapper.exclusive:
                continue
    
            # Process the grammar.
            processing_occurred = wrapper.process_words(words_rules)
            if processing_occurred:
                break
    
        # If no processing occurred, then the mimic failed.
        if not processing_occurred:
            self._recognition_observer_manager.notify_failure(None)
>           raise MimicFailure("No matching rule found for words %r."
                               % (words,))
E           dragonfly.engines.base.engine.MimicFailure: No matching rule found for words ['test', 'three', 'test', 'two', 'banana', 'five'].

venv/lib/python3.8/site-packages/dragonfly/engines/backend_text/engine.py:247: MimicFailure
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/bd7ea665a1e2fd99807bc30b32fa8f51.csv -
=========================== short test summary info ============================
FAILED tests/test_top_level.py::test_top_level_command_failure - assert 0 == 2
FAILED tests/test_merger.py::test_core_commands - dragonfly.engines.base.engi...
========================= 2 failed, 1 passed in 0.73s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/Breathe
plugins: csv-3.0.0
collected 3 items

tests/test_command_context.py .                                          [ 33%]
tests/test_top_level.py .                                                [ 66%]
tests/test_merger.py .                                                   [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/283270a1bb91531fd1bc981fcddcb9b5/ae310fd18c8be156da77c86e2dc6a4ea.csv -
============================== 3 passed in 0.58s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.09s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 1 failed, 2 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.15s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/1f90b8ba2e2811533da8d270ef4eed9c/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_implements_no_implementation_getter
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 1 failed, 2 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.06s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/4315d443c5328d09e0c1041175a1beca/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.12s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 1 failed, 2 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.15s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.06s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/b05489263b56a217e348ffb6968e09d6/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_implements_no_implementation_setter
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.09s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.09s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 1 failed, 2 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.06s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/79755630812b108af22a797883fd62dd/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.09s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.10s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 1 failed, 2 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.06s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/2c7290a673d9a61746b297460095bfad/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_implements_not_cls_convention
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 1 failed, 2 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/dd3621f9043c2682436ed1467b07fe63/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_implements_not_self_convention
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.09s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 1 failed, 2 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
========================= 2 failed, 1 passed in 0.15s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/bc07881ae8116f16dd7c9a3d57743a09/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 1 failed, 2 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.14s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/d431d57abbc670e98ca56248753852b2/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 1 failed, 2 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 1 failed, 1 passed in 0.12s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.06s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/eda8ab430a193af72755de1dc9b65952/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.08s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 1 failed, 2 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.06s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/04dd4a79be7df0d4f363b7d1162ebed6/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_not_implements_private_access
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 1 failed, 2 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.15s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.06s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/77b977e3906fc9af63fdb270d7c8ed0d/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
in accessify
[polluter] tests/disabling/test_disable.py::test_disabling_accessify
[victim]: tests/interfaces/test_implements.py::test_not_implements_protected_access
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/13cd5318fa65eff43ce3668e5d7cab16.csv -
============================== 3 passed in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/4247db56bcf8093ed8208d6e629874e2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_common.py .                                    [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/59f97c6974173eaa2bd446c39ca48f45.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/662b0518b5eacf02dc909aa059ab2ae8.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/80a72486b7c1212af0d1b687efd75647.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/b17376d345bbba7bb589e41805944acf.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_decorators.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/9d09c189ecba8e99e7eb96dd927be3fc.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/63fdb8a72be747f8ede7307f7ff29727.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/7dc637f40a308d0f40a3b0c82b4053b3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/private/test_not_self.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/be4d99269e8139404f6213999fa57097.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/5017f18cff0ce1d5f9c47f605b5df81d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/560c43a081286062fd2d4369c18cce4d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/700de4dbb9ed26252ce77fd513147f62.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/c405051bd8ac82f02d7ef5a88f5a32d3.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_common.py .                                  [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/1aecf74ab3cf3a5d76b6d477d9a259a7.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/73fbd7eeaa3ec8f714c4d1b42df7a939.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/af509ba667a471963f31554bdd78d499.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/64d74554a270afe0d6b799ca72610d2b.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_decorators.py .                              [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/b21481fc316fe9be445ed2f508e3c60d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/ebffe2f34986704f266239dd65b2442d.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/3d67a64bad6244215f63c9caf5d5f7da.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/9db0ada4b814b3d2af5123a96e2f7c20.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/05ce3765d507ec413e4ae4da248ffe61.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/access/protected/test_not_self.py .                                [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/6fec040eb9929012740fe933c2d6cf0e.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/5130407cc67597a0c0d520f728c411f7.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_get_class_members.py .                             [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/45b8764fffca44483bb79aee71c4f6f2.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py .F                                   [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/ec198adf46695b9e2096b8ab8dac06f6.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 1 failed, 2 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_not_implements_private_access ______________________

    def test_not_implements_private_access():
        """
        Case: do not implement interface member with mismatched private access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @private
            @staticmethod
            @custom_decorator
            def dream(about, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @staticmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:120: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/be003d9ddd175950810526985e078652.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_private_access
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 50%]
tests/interfaces/test_implements.py F                                    [100%]

=================================== FAILURES ===================================
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/1c581ad6a9142f0b6a771212356126b5.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 1 failed, 1 passed in 0.13s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_getter ___________________

    def test_implements_no_implementation_getter():
        """
        Case: do not implement interface member that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:172: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/085fe9a0cf0cd49bfefe423381053348.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_getter
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
___________________ test_implements_no_implementation_setter ___________________

    def test_implements_no_implementation_setter():
        """
        Case: do not implement interface member that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.setter
            def name(self, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:197: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/c622a35c3e8df98f63db8e93858f9728.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_setter
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
__________________ test_implements_no_implementation_deleter ___________________

    def test_implements_no_implementation_deleter():
        """
        Case: do not implement interface member that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(self):
                return
    
            @name.deleter
            def name(self):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:225: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/443b5e93b8b20bda3df4eca0a3e0a47e.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_deleter
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_______________ test_implements_no_implementation_static_method ________________

    def test_implements_no_implementation_static_method():
        """
        Case: do not implement interface member that is static method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @staticmethod
            def eat(food, *args, allergy=None, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:249: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/e41a82ea3fc03c8aec400d1497942a64.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_static_method
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________ test_implements_no_implementation_instance_method _______________

    def test_implements_no_implementation_instance_method():
        """
        Case: do not implement interface member that is method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def love(self, who, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:269: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/3ba7672e20de9e82c2a204d6efdf2957.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_no_implementation_instance_method
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
______________________ test_implements_not_cls_convention ______________________

    def test_implements_not_cls_convention():
        """
        Case: do not implement interface member, which do not follow naming convention, that is class method.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            @classmethod
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:290: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/7b379a49446b110a150636cdbe781b9f.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_cls_convention
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
_____________________ test_implements_not_self_convention ______________________

    def test_implements_not_self_convention():
        """
        Case: do not implement interface member, which do not follow naming convention.
        Expect: class does not implement interface member error message.
        """
        class HumanBasicsInterface:
    
            def think(this, about, *args, **kwargs):
                pass
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanBasicsInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:310: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/940ae9da070611605280d58058c4476d.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_getter _________________

    def test_implements_not_self_convention_in_getter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is getter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
E           Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:331: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/6b5a0b0b4029d0eab63411462c9a611a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_getter
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_deleter ________________

    def test_implements_not_self_convention_in_deleter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is deleter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.deleter
            def name(this):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:356: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/8f9d52f7e5170d984199636685b6934a.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_deleter
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_implements.py FF                                   [100%]

=================================== FAILURES ===================================
________________ test_implements_not_self_convention_in_setter _________________

    def test_implements_not_self_convention_in_setter():
        """
        Case: do not implement interface member, which do not follow naming convention, that is setter.
        Expect: class does not implement interface member error message.
        """
        class HumanNameInterface:
    
            @property
            def name(this):
                return
    
            @name.setter
            def name(this, new_name):
                return
    
        with pytest.raises(InterfaceMemberHasNotBeenImplementedException) as error:
    
            @implements(HumanNameInterface)
>           class HumanWithoutImplementation:
    
                @property
E               Failed: DID NOT RAISE <class 'accessify.errors.InterfaceMemberHasNotBeenImplementedException'>

tests/interfaces/test_implements.py:384: Failed
_____________________ test_not_implements_protected_access _____________________

    def test_not_implements_protected_access():
        """
        Case: do not implement interface member with mismatched protected access.
        Expect: class mismatches interface member access modifier error message.
        """
        class HumanSoulInterface:
    
            @protected
            @classmethod
            @custom_decorator
            def die(cls, when, *args, **kwargs):
                pass
    
        with pytest.raises(ImplementedInterfaceMemberHasIncorrectAccessModifierException) as error:
    
            @implements(HumanSoulInterface)
>           class HumanSoul:
    
                @classmethod
                @custom_decorator
E               Failed: DID NOT RAISE <class 'accessify.errors.ImplementedInterfaceMemberHasIncorrectAccessModifierException'>

tests/interfaces/test_implements.py:147: Failed
- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/f86eb8082049c16d604941e4c0363f12.csv -
=========================== short test summary info ============================
FAILED tests/interfaces/test_implements.py::test_implements_not_self_convention_in_setter
FAILED tests/interfaces/test_implements.py::test_not_implements_protected_access
========================= 2 failed, 1 passed in 0.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/3167839451fa9f2222efea8e39b6ae50.csv -
============================== 3 passed in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /home/tsm/iFixFlakies_python/Repo/accessify
plugins: csv-3.0.0, cov-3.0.0
collected 3 items

tests/disabling/test_disable.py .                                        [ 33%]
tests/interfaces/test_throws.py .                                        [ 66%]
tests/interfaces/test_implements.py .                                    [100%]

- CSV report: /home/tsm/iFixFlakies_python/output/cleaner/cada0e66cc1003fd915687e7ca30e4e7/9199d551e85ab276f2008258c8f911e3.csv -
============================== 3 passed in 0.07s ===============================
