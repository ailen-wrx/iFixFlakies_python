$ docker import ipflakies_docker_container.tar ipflakies
$ docker run -it -v $(pwd)/docker_output:/root/external --name ipflakies_test ipflakies /bin/bash
root@e16686deab08:/# cd /root
root@e16686deab08:~# grep IOCynergy pytest_suites.csv > test.in
root@e16686deab08:~# bash exec_ipflakies.sh test.in dataset.csv
[ PROJECT ] IOCynergy
Cloning into 'IOCynergy'...
remote: Enumerating objects: 22, done.
remote: Counting objects: 100% (22/22), done.
remote: Compressing objects: 100% (19/19), done.
remote: Total 22 (delta 0), reused 6 (delta 0), pack-reused 0
Receiving objects: 100% (22/22), 11.31 KiB | 827.00 KiB/s, done.
remote: Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
From https://github.com/omersaraf/IOCynergy
 * branch            1821423680f741d8ca06bcc6a02c8b21156f9ba0 -> FETCH_HEAD
Note: switching to '1821423680f741d8ca06bcc6a02c8b21156f9ba0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 1821423 Merge pull request #2 from omersaraf/ci
[ PROJECT ] IOCynergy installing dependencies...
=================================================== test session starts ===================================================
platform linux -- Python 3.8.12, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
Test order randomisation NOT enabled. Enable with --random-order or --random-order-bucket=<bucket_type>
rootdir: /root/IOCynergy
plugins: env-0.6.2, csv-3.0.0, random-order-1.0.4
collected 14 items                                                                                                        

cynergy/tests/test_class_mapping.py ..                                                                              [ 14%]
cynergy/tests/test_config.py ...                                                                                    [ 35%]
cynergy/tests/test_life_cycle.py ...                                                                                [ 57%]
cynergy/tests/test_register_multiple.py ....                                                                        [ 85%]
cynergy/tests/test_sanity.py ..                                                                                     [100%]

==================================================== warnings summary =====================================================
cynergy/tests/test_class_mapping.py::test_class_mapping
cynergy/tests/test_class_mapping.py::test_class_mapping_from_init
cynergy/tests/test_config.py::test_argument_injection
cynergy/tests/test_config.py::test_argument_not_in_config_and_no_default
cynergy/tests/test_config.py::test_config_provider_is_not_initialized
  /root/IOCynergy/cynergy/container.py:177: UserWarning: Container already initialized. If you need multiple instances consider not use the container statically
    warn("Container already initialized. If you need multiple instances consider not use the container statically",

-- Docs: https://docs.pytest.org/en/stable/warnings.html
============================================= 14 passed, 5 warnings in 0.43s ==============================================
Complete.
=================================================== test session starts ===================================================
platform linux -- Python 3.8.12, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
Test order randomisation NOT enabled. Enable with --random-order or --random-order-bucket=<bucket_type>
rootdir: /root/IOCynergy
plugins: env-0.6.2, csv-3.0.0, random-order-1.0.4
collected 14 items                                                                                                        

cynergy/tests/test_class_mapping.py ..                                                                              [ 14%]
cynergy/tests/test_config.py ...                                                                                    [ 35%]
cynergy/tests/test_life_cycle.py ...                                                                                [ 57%]
cynergy/tests/test_register_multiple.py ....                                                                        [ 85%]
cynergy/tests/test_sanity.py ..                                                                                     [100%]

==================================================== warnings summary =====================================================
cynergy/tests/test_class_mapping.py::test_class_mapping
cynergy/tests/test_class_mapping.py::test_class_mapping_from_init
cynergy/tests/test_config.py::test_argument_injection
cynergy/tests/test_config.py::test_argument_not_in_config_and_no_default
cynergy/tests/test_config.py::test_config_provider_is_not_initialized
  /root/IOCynergy/cynergy/container.py:177: UserWarning: Container already initialized. If you need multiple instances consider not use the container statically
    warn("Container already initialized. If you need multiple instances consider not use the container statically",

-- Docs: https://docs.pytest.org/en/stable/warnings.html
============================================= 14 passed, 5 warnings in 0.27s ==============================================
======================================================== iDFlakies ========================================================
------------------------------------------------------- Randomizer -------------------------------------------------------
Running randomized test suites 100 times with seed "ICSE_DEMO"
Complete.                                                            
-------------------------------------------------------- Analyzer --------------------------------------------------------
[iDFlakies] cynergy/tests/test_register_multiple.py::test_register_multiple is a flaky test, checking whether it is non-deterministic or order-dependent...
[iDFlakies] cynergy/tests/test_register_multiple.py::test_register_multiple is order-dependent, checking whether it is a victim or a brittle...
[iDFlakies] cynergy/tests/test_register_multiple.py::test_register_multiple is a victim.
========================================================= Result =========================================================
1 flaky test(s) found in this project: 
[1] victim   cynergy/tests/test_register_multiple.py::test_register_multiple
Summary data written into ipflakies_result/flakies.json
[ TEST ] cynergy/tests/test_register_multiple.py::test_register_multiple
======================================================= iFixFlakies =======================================================
cynergy/tests/test_register_multiple.py::test_register_multiple is a victim.

======================================================== POLLUTER ========================================================
------------------------------------------------------ [ Minimizer ] ------------------------------------------------------
Complete.                                                            
3 polluter(s) for cynergy/tests/test_register_multiple.py::test_register_multiple found:
[1]  cynergy/tests/test_register_multiple.py::test_multiple_list_arguments
[2]  cynergy/tests/test_register_multiple.py::test_multiple_list_arguments_with_wrap
[3]  cynergy/tests/test_register_multiple.py::test_register_multiple_when_onc_instance_is_already_registered

------------------------------------------------------- [ Patcher ] -------------------------------------------------------
1 / 3  Detecting cleaners for polluter cynergy/tests/test_register_multiple.py::test_multiple_list_arguments.
Complete.                                                            
6 cleaner(s) found.
[1]  cynergy/tests/test_class_mapping.py::test_class_mapping
[Patcher] A patch is generated by Patcher: 
[Patcher] 37a38
[Patcher] >     container.initialize()
[Patcher] 
[Patcher] The patch can fix the pollution from 3/3 polluters.
[Patcher] Found a patch to fix all polluters. Stopped.
[Patcher] Run with parameter --patch-mode=all to detect all possible patches.
=========================================================== END ===========================================================
Summary data written into ipflakies_result/0e3e3632/minimized.json
