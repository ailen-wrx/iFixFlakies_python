--- tests/io/test_workbenches.py	2021-10-21 07:49:30.000000000 +0000
+++ _patch.py	2021-11-30 16:57:13.634752738 +0000
@@ -1,3 +1,4 @@
+
 from tenable.errors import *
 from ..checker import check, single
 from io import BytesIO
@@ -107,13 +108,13 @@ def test_workbench_asset_activity(api):
     for i in history:
         check(i, 'timestamp', 'datetime')
         check(i, 'type', str)
-        if i['type'] in ['tagging', 'updated']:
+        if (i['type'] in ['tagging', 'updated']):
             check(i, 'updates', list)
             for j in i['updates']:
                 check(j, 'method', str)
                 check(j, 'property', str)
                 check(j, 'value', str)
-        if i['type'] == 'discovered':
+        if (i['type'] == 'discovered'):
             check(i, 'details', dict)
             check(i['details'], 'assetId', 'uuid')
             check(i['details'], 'createdAt', 'datetime')
@@ -132,7 +133,7 @@ def test_workbench_asset_activity(api):
                 check(j, 'lastSeen', 'datetime')
                 check(j, 'name', str)
             check(i['details'], 'updatedAt', 'datetime')
-        if i['type'] in ['discovered', 'seen', 'updated']:
+        if (i['type'] in ['discovered', 'seen', 'updated']):
             check(i, 'scan_id', 'scanner-uuid')
             check(i, 'schedule_id', 'scanner-uuid')
             check(i, 'source', str)
@@ -180,8 +181,7 @@ def test_workbench_asset_vulns_filter_ty
 @pytest.mark.vcr()
 def test_workbench_asset_vulns_invalid_filter(api):
     with pytest.raises(UnexpectedValueError):
-        api.workbenches.asset_vulns(str(uuid.uuid4()),
-            ('operating_system', 'contains', 'Linux'))
+        api.workbenches.asset_vulns(str(uuid.uuid4()), ('operating_system', 'contains', 'Linux'))
 
 @pytest.mark.vcr()
 def test_workbench_asset_vulns(api):
@@ -204,8 +204,7 @@ def test_workbench_asset_vulns(api):
 @pytest.mark.vcr()
 def test_workbench_asset_vulns_filtered(api):
     assets = api.workbenches.assets()
-    vulns = api.workbenches.asset_vulns(assets[0]['id'],
-        ('severity', 'eq', 'Info'))
+    vulns = api.workbenches.asset_vulns(assets[0]['id'], ('severity', 'eq', 'Info'))
     assert isinstance(vulns, list)
     v = vulns[0]
     check(v, 'accepted_count', int)
@@ -253,8 +252,7 @@ def test_workbench_asset_vuln_info_filte
 @pytest.mark.vcr()
 def test_workbench_asset_vuln_info_invalid_filter(api):
     with pytest.raises(UnexpectedValueError):
-        api.workbenches.asset_vuln_info(str(uuid.uuid4()), 19506,
-            ('operating_system', 'contains', 'Linux'))
+        api.workbenches.asset_vuln_info(str(uuid.uuid4()), 19506, ('operating_system', 'contains', 'Linux'))
 
 @pytest.mark.vcr()
 def test_workbench_asset_vuln_info(api):
@@ -323,8 +321,7 @@ def test_workbench_asset_vuln_output_fil
 @pytest.mark.vcr()
 def test_workbench_asset_vuln_output_invalid_filter(api):
     with pytest.raises(UnexpectedValueError):
-        api.workbenches.asset_vuln_output(str(uuid.uuid4()), 19506,
-            ('operating_system', 'contains', 'Linux'))
+        api.workbenches.asset_vuln_output(str(uuid.uuid4()), 19506, ('operating_system', 'contains', 'Linux'))
 
 @pytest.mark.vcr()
 def test_workbench_asset_vuln_output(api):
@@ -394,6 +391,8 @@ def test_workbench_export_format_typeerr
 
 @pytest.mark.vcr()
 def test_workbench_export_format_unexpectedvalueerror(api):
+    with pytest.raises(TypeError):
+        api.workbenches.asset_vulns(1)
     with pytest.raises(UnexpectedValueError):
         api.workbenches.export(format='something else')
 
@@ -607,4 +606,4 @@ def test_workbenches_asset_delete_asset_
 @pytest.mark.vcr()
 def test_workbenches_asset_delete_success(api):
     asset = api.workbenches.assets()[0]
-    api.workbenches.asset_delete(asset['id'])
\ No newline at end of file
+    api.workbenches.asset_delete(asset['id'])
